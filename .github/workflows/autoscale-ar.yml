name: Autoscale Artifact Registry

on: 
  workflow_dispatch:
  push: 
    brances:
      - main

env:
  APP_NAME: ${{ vars.APP_NAME }}
  APP_HOST: ${{ vars.APP_HOST }}

jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: setup golang
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: check linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60

      - name: show the app name
        run : echo "app name $APP_NAME"

      - name: build golang app
        run: |
          GOOS=linux go build -o $APP_NAME -v
      
      - name: check executable
        run: ls

  deploy:
    needs: build     
    runs-on: ubuntu-20.04
    steps:
      - name: checkout code
        uses: actions/checkout@v4 

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}  
          project_id: ${{ secrets.GCP_PROJECT_ID }}  
          export_default_credentials: true

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/app1:$GITHUB_SHA .


      - name: Authenticate to Google Cloud
        run: |
          echo ${{ secrets.GCP_SA_KEY }} | base64 --decode > ${HOME}/gcloud-service-key.json
          gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
          gcloud auth configure-docker

      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${{ secrets.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/my-app:$GITHUB_SHA

  
    