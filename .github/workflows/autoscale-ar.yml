name: Autoscale Artifact Registry

on: 
  workflow_dispatch:
  push: 
    brances:
      - main

env:
  APP_NAME: ${{ vars.APP_NAME }}
  APP_HOST: ${{ vars.APP_HOST }}
  TAG: $(date +%Y-%m-%d-%H-%M-%S)

jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: setup golang
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: check linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60

      - name: show the app name
        run : echo "app name $APP_NAME"

      - name: build golang app
        run: |
          GOOS=linux go build -o $APP_NAME -v
      
      - name: check executable
        run: ls

  deploy:
    needs: build     
    runs-on: ubuntu-20.04
    steps:
      - name: checkout code
        uses: actions/checkout@v4 

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Set the TAG value
        run: |
          TAG="version-$(date +%Y-%m-%d-%H-%M-%S)"
          echo "TAG=$TAG" >> $GITHUB_ENV  # Set TAG as an environment variable

      - name: Build Docker image
        run: |
          docker build -t asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/app1:$TAG .
      
      - name: Configure gcloud CLI
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud auth configure-docker asia-southeast2-docker.pkg.dev

      - name: Push Docker image to Artifact Registry
        run: |
          DOCKER_IMAGE_TAG="version-$(date +%Y-%m-%d-%H-%M-%S)"
          echo $DOCKER_IMAGE_TAG
          docker push asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/app1:$TAG

      - name: Create instance template based on docker image
        run: |
          TEMPLATE_NAME="go-app1-autoscale-cicd-$(date +%Y-%m-%d-%H-%M-%S)"
          gcloud compute instance-templates create-with-container $TEMPLATE_NAME \
            --container-image=asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/app1:latest \
            --region=asia-southeast2 \
            --network-interface=network=bab-lb-network,subnet=lb-jakarta \
            --tags=allow-ssh,lb-backend \
            --machine-type=n1-standard-1 

      - name: Update managed instance group
        run: |
          gcloud compute instance-groups managed rolling-action start-update go-app1-group-autoscale-cicd-v3 \
          --version=template='$TEMPLATE_NAME' \
          --max-unavailable=1 \ 
          --replacement-method=recreate


 # - name: Create or update instance template
      #   run: |
      #     gcloud compute instance-templates create go-app1-autoscale-cicd-v3 \
      #       --project=${{ secrets.GCP_PROJECT_ID }} \
      #       --machine-type=n1-standard-1 \
      #       --image-project=${{ secrets.GCP_PROJECT_ID }} \
      #       --image=asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/app1:latest \
      #       --network=bab-lb-network \
      #       --region=asia-southeast2 \
      #       --subnet=lb-jakarta \
      #       --tags=lb-backend,allow-ssh 