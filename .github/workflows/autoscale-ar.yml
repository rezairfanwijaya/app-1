name: Autoscale Artifact Registry

on: 
  workflow_dispatch:
  push: 
    brances:
      - main

env:
  APP_NAME: ${{ vars.APP_NAME }}
  APP_HOST: ${{ vars.APP_HOST }}

jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: setup golang
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: check linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60

      - name: show the app name
        run : echo "app name $APP_NAME"

      - name: build golang app
        run: |
          GOOS=linux go build -o $APP_NAME -v
      
      - name: check executable
        run: ls

  deploy:
    needs: build     
    runs-on: ubuntu-20.04
    steps:
      - name: checkout code
        uses: actions/checkout@v4 

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Build Docker image
        run: |
          docker build -t asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/app1:latest .
      
      - name: Configure gcloud CLI
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud auth configure-docker asia-southeast2-docker.pkg.dev

      - name: Push Docker image to Artifact Registry
        run: |
          docker push asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/app1:latest

      # - name: Create or update instance template
      #   run: |
      #     gcloud compute instance-templates create go-app1-autoscale-cicd-v3 \
      #       --project=${{ secrets.GCP_PROJECT_ID }} \
      #       --machine-type=n1-standard-1 \
      #       --image-project=${{ secrets.GCP_PROJECT_ID }} \
      #       --image=asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/app1:latest \
      #       --network=bab-lb-network \
      #       --region=asia-southeast2 \
      #       --subnet=lb-jakarta \
      #       --tags=lb-backend,allow-ssh

      - name: Create instance template based on docker image
        run: |
          gcloud beta compute instance-templates create-with-container go-app1-instance-template-cicd-${GITHUB_SHA:0:8} --project=${{ secrets.GCP_PROJECT_ID }} --machine-type=n1-standard-1 --network-interface=network-tier=PREMIUM,stack-type=IPV4_ONLY,subnet=lb-jakarta --instance-template-region=asia-southeast2 --maintenance-policy=MIGRATE --provisioning-model=STANDARD --service-account=237637382334-compute@developer.gserviceaccount.com --scopes=https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/trace.append --region=asia-southeast2 --tags=allow-ssh,lb-backend --container-image=asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/go-app1-ar/app1:latest --container-restart-policy=always --container-privileged --create-disk=auto-delete=yes,boot=yes,device-name=test,image=projects/cos-cloud/global/images/cos-stable-117-18613-75-4,mode=rw,size=10,type=pd-balanced --no-shielded-secure-boot --shielded-vtpm --shielded-integrity-monitoring --labels=container-vm=cos-stable-117-18613-75-4
    